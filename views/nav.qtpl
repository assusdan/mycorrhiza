{% import "github.com/bouncepaw/mycorrhiza/cfg" %}
{% import "github.com/bouncepaw/mycorrhiza/backlinks" %}
{% import "github.com/bouncepaw/mycorrhiza/user" %}
{% import "github.com/bouncepaw/mycorrhiza/hyphae" %}
{% import "github.com/bouncepaw/mycorrhiza/viewutil" %}

{% func hyphaInfoEntry(h hyphae.Hypha, u *user.User, action, displayText string) %}
{% if u.CanProceed(action) %}
<li class="hypha-info__entry hypha-info__entry_{%s action %}">
	<a class="hypha-info__link" href="/{%s action %}/{%s h.CanonicalName() %}">{%s displayText %}</a>
</li>
{% endif %}
{% endfunc %}

{% func hyphaInfo(meta viewutil.Meta, h hyphae.Hypha) %}
{% code
	u := meta.U
	lc := meta.Lc
	backs := backlinks.BacklinksCount(h)
%}
<nav class="hypha-info">
	<ul class="hypha-info__list">
		{%= hyphaInfoEntry(h, u, "history", lc.Get("ui.history_link")) %}
		{%= hyphaInfoEntry(h, u, "rename", lc.Get("ui.rename_link")) %}
		{%= hyphaInfoEntry(h, u, "delete", lc.Get("ui.delete_link")) %}
		{%= hyphaInfoEntry(h, u, "text", lc.Get("ui.text_link")) %}
		{%= hyphaInfoEntry(h, u, "media", lc.Get("ui.media_link")) %}
		{%= hyphaInfoEntry(h, u, "backlinks", lc.GetPlural("ui.backlinks_link", backs)) %}
	</ul>
</nav>
{% endfunc %}

{% func commonScripts() %}
{% for _, scriptPath := range cfg.CommonScripts %}
<script src="{%s scriptPath %}"></script>
{% endfor %}
{% endfunc %}
